import xml.etree.ElementTree
from datetime import date, datetime
from typing import Dict


# TODO: REFACTOR THIS CLASS
class CompareDates:

    def __init__(self, xml_content: xml.etree.ElementTree.Element):
        self.date_today = datetime.strptime(str(date.today()), "%Y-%m-%d")
        self.xml_content = xml_content

    @property
    def _extract_last_db_update_time(self) -> Dict[str, str]:
        return {child.tag: child.text for child in self.xml_content[1] if 'database' in child.tag}

    @property
    def _convert_last_db_update_time(self) -> Dict[str, datetime]:
        return {key: datetime.strptime(val.replace(".", "-", 2).replace("v", "")[:-3], "%Y-%m-%d") for key, val in
                self._extract_last_db_update_time.items()}

    @property
    def database_dates(self) -> Dict[str, int]:
        return {key: (self.date_today - val).days for key, val in self._convert_last_db_update_time.items()}
