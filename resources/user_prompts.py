"""Module containing funcs that prompt the user for input and return bool"""

# Standard Library imports
import getpass
import platform

# Local App imports
from resources.utils import error_handler, check_if_path_exists
from resources.errors import BadPromptResponseError, NoXmlInPathError


@error_handler
def get_file_path() -> bool or str:
    """
    Function to prompt the user and determine if they want to start monitoring a path.
    :return: Boolean result of prompt if user types 'EXIT' or the file path as a string
    :raise: Will raise either a NoXmlInPathError if user adds path without .XML.
    :raise: Will raise a BadPromptResponseError if the .XML path provided does not exist on the OS.
    """
    filePath = input(
        "[?] Path to the MBBR-STDOUT file NO quotations (e.g., C:/Users/file.xml) or 'EXIT' to quit >> ").lower()  # prompt user for path.lower()
    if 'exit' in filePath:
        return False
    elif '.xml' not in filePath:
        raise NoXmlInPathError
    else:
        if check_if_path_exists(filePath):
            return filePath
        else:
            raise FileNotFoundError


@error_handler
def continue_or_quit() -> bool:
    """
    Function to prompt the user and determine if they want to check another XML file.

    :return: Boolean result of prompt (True=yes / False=no)
    :raise: Will raise a BadPromptResponseError if prompts do not comply with expectations
    """
    user_input = input("[?] Scan another XML file? [y/n] >> ").lower()
    if 'y' in user_input:
        return True
    elif 'n' in user_input:
        return False
    else:
        raise BadPromptResponseError
