"""Module containing tests for user prompts"""

# Third-party imports
import pytest

# Local App imports
from resources.user_prompts import get_file_path
from resources.errors import NoXmlInPathError


def test_get_file_path_success(monkeypatch) -> None:
    """
    This test function uses the pytest monkeypatch to mock the user input
    and test the successful return of a string path.

    :param monkeypatch: Mocking the correct path string that will return a lower case string
    :return: None
    """
    monkeypatch.setattr('builtins.input', lambda _: 'tests/test_resources/MBBR-STDOUT_mixed_results.XML')
    assert get_file_path() == 'tests/test_resources/mbbr-stdout_mixed_results.xml'


def test_get_file_path_exit(monkeypatch) -> None:
    """
    This test function uses the pytest monkeypatch to mock the user input
    and test the user wanting to quit the process using 'EXIT'.

    :param monkeypatch: Mocking the 'EXIT' string being passed and the bool result of False being returned
    :return: None
    """
    monkeypatch.setattr('builtins.input', lambda _: 'EXIT')
    assert get_file_path() is False


def test_get_file_path_filenotfounderror(monkeypatch) -> None:
    """
    This test function uses the pytest monkeypatch to mock the user input
    and test a user input for a path that does not exist on the OS and raises an error.

    :param monkeypatch: Mocking a path string that cannot be found by the OS
    :return: None
    """
    monkeypatch.setattr('builtins.input', lambda _: 'tests/path_does_not_exist.XML')
    with pytest.raises(FileNotFoundError):
        assert get_file_path()


def test_get_file_path_noxmlinpatherror(monkeypatch) -> None:
    """
    This test function uses the pytest monkeypatch to mock the user input
    and test a user input for a path that does not contain .XML and raises an error.
    :param monkeypatch: Mocking a path string that does not end in .XML
    :return: None
    """
    monkeypatch.setattr('builtins.input', lambda _: 'tests/test_resources/MBBR-STDOUT_mixed_results.TXT')
    with pytest.raises(NoXmlInPathError):
        assert get_file_path()
