import time
from resources.compare_dates import CompareDates
from resources.check_for_threats import CheckForThreats

from resources.user_prompts import get_file_path
from resources.utils import (
    error_handler,
    create_logger,
    read_file
)


def main(file_path: str) -> None:
    while True:

        # print the dates for the databases
        compareDates = CompareDates(read_file(file_path))
        dbDates = compareDates.runDateCheck()
        print("\n---------------------------------------------------------------------------------")
        print("---------------------------------------------------------------------------------")
        for key, date in dbDates.items():

            if date:
                print(f'[-] The {key} is {date} days old, considering updating...')
            else:
                print(f'[+] The {key} is up to date...')

        # check to see if threats are present in output
        checkThreats = CheckForThreats(read_file(file_path))
        checkThreats.run()

        checkInput = input(
            "[?] Would you like to check another file? [yes/EXIT] >> ")  # prompt user to continue
        if checkInput == 'yes':
            continue
        elif checkInput == 'EXIT':
            print("[+] Closing program...")
            time.sleep(2)
            break
        else:
            print("[-] Input is unknown, please try again...")
            time.sleep(2)
            continue


if __name__ == '__main__':
    user_input = get_file_path()
    main(user_input) if user_input else None  # ternary to decide if main func should be called

    # while True:
    #     try:
    #         filePath = input(
    #             "[?] Please specify the path to the MBBR-STDOUT file or type 'EXIT' to quit >> ")  # prompt user for path
    #         if filePath == 'EXIT':  # exit program if requested
    #             print("[+] Closing program...")
    #             time.sleep(2)
    #             break
    #         elif '.XML' not in filePath:  # check that file path includes an XML file
    #             raise Exception
    #         else:
    #             getXmlData = GetXMLData()  # instantiate class object
    #
    #             # print the dates for the databases
    #             compareDates = CompareDates(getXmlData.readFile(filePath))
    #             dbDates = compareDates.runDateCheck()
    #             print("\n---------------------------------------------------------------------------------")
    #             print("---------------------------------------------------------------------------------")
    #             for key, date in dbDates.items():
    #
    #                 if date:
    #                     print(f'[-] The {key} is {date} days old, considering updating...')
    #                 else:
    #                     print(f'[+] The {key} is up to date...')
    #
    #             # check to see if threats are present in output
    #             checkThreats = CheckForThreats(getXmlData.readFile(filePath))
    #             checkThreats.run()
    #
    #             checkInput = input(
    #                 "[?] Would you like to check another file? [yes/EXIT] >> ")  # prompt user to continue
    #             if checkInput == 'yes':
    #                 continue
    #             elif checkInput == 'EXIT':
    #                 print("[+] Closing program...")
    #                 time.sleep(2)
    #                 break
    #             else:
    #                 print("[-] Input is unknown, please try again...")
    #                 time.sleep(2)
    #                 continue
    #     except:
    #         print("[-] Path provided did not include XML file, please retry...")
    #         time.sleep(2)
    #         continue
