"""Module containing tests for check_for_threats.py"""

# Third-party imports
import pytest

# Local App imports
from resources.check_for_threats import Threats
from resources.utils import read_file


@pytest.fixture
def get_single_threats_from_threat():
    xml_element = read_file('tests/test_resources/MBBR-STDOUT_all_single_events.XML')
    return xml_element


@pytest.fixture
def get_no_threats_from_threat():
    xml_element = read_file('tests/test_resources/MBBR-STDOUT_no_events.XML')
    return xml_element


@pytest.fixture
def get_multi_threats_from_threat():
    xml_element = read_file('tests/test_resources/MBBR-STDOUT_mixed_results.XML')
    return xml_element


def test_print_threats_if_found(get_no_threats_from_threat, get_multi_threats_from_threat,
                                get_single_threats_from_threat):
    no_threat_bool_result = Threats(get_no_threats_from_threat)
    assert no_threat_bool_result.print_threats_if_found() is False

    single_threat_bool_result = Threats(get_single_threats_from_threat)
    assert single_threat_bool_result.print_threats_if_found() is True

    multi_threat_bool_result = Threats(get_multi_threats_from_threat)
    assert multi_threat_bool_result.print_threats_if_found() is True
